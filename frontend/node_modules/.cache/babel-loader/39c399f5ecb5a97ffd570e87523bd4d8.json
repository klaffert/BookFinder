{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Desktop/Book Liker/React/frontend/src/components/BookCollection.js\";\nimport React, { Component } from \"react\";\nimport BookCard from \"./BookCard\";\nimport { Grid, Container } from \"semantic-ui-react\";\nvar favoritesUrl = \"http://localhost:3001/favorites\";\nexport class BookCollection extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.favoriteBook = book => {\n      const user_id = this.props.user_id;\n      var book_string = JSON.stringify(book);\n      fetch(favoritesUrl, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user_id: user_id,\n          title: book.volumeInfo.title,\n          book_string: book_string,\n          authors: book.volumeInfo.authors[0],\n          image_url: book.volumeInfo.imageLinks.thumbnail\n        })\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      divided: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, this.props.books.map((book, index) => React.createElement(\"div\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(BookCard, {\n      onFavoriteBook: this.favoriteBook,\n      book: book,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })))));\n  }\n\n}\nexport default BookCollection;","map":{"version":3,"sources":["/Users/flatironschool/Desktop/Book Liker/React/frontend/src/components/BookCollection.js"],"names":["React","Component","BookCard","Grid","Container","favoritesUrl","BookCollection","favoriteBook","book","user_id","props","book_string","JSON","stringify","fetch","method","headers","body","title","volumeInfo","authors","image_url","imageLinks","thumbnail","render","books","map","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,mBAAhC;AAEA,IAAIC,YAAY,GAAG,iCAAnB;AAEA,OAAO,MAAMC,cAAN,SAA6BL,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SAC5CM,YAD4C,GAC7BC,IAAI,IAAI;AAAA,YACbC,OADa,GACD,KAAKC,KADJ,CACbD,OADa;AAErB,UAAIE,WAAW,GAAGC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAlB;AAEAM,MAAAA,KAAK,CAACT,YAAD,EAAe;AAClBU,QAAAA,MAAM,EAAE,MADU;AAElBC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFS;AAGlBC,QAAAA,IAAI,EAAEL,IAAI,CAACC,SAAL,CAAe;AACnBJ,UAAAA,OAAO,EAAEA,OADU;AAEnBS,UAAAA,KAAK,EAAEV,IAAI,CAACW,UAAL,CAAgBD,KAFJ;AAGnBP,UAAAA,WAAW,EAAEA,WAHM;AAInBS,UAAAA,OAAO,EAAEZ,IAAI,CAACW,UAAL,CAAgBC,OAAhB,CAAwB,CAAxB,CAJU;AAKnBC,UAAAA,SAAS,EAAEb,IAAI,CAACW,UAAL,CAAgBG,UAAhB,CAA2BC;AALnB,SAAf;AAHY,OAAf,CAAL;AAWD,KAhB2C;AAAA;;AAkB5CC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,OAAO,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKd,KAAL,CAAWe,KAAX,CAAiBC,GAAjB,CAAqB,CAAClB,IAAD,EAAOmB,KAAP,KACpB;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,cAAc,EAAE,KAAKpB,YAA/B;AAA6C,MAAA,IAAI,EAAEC,IAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADD,CADH,CADF,CADF;AAWD;;AA9B2C;AAiC9C,eAAeF,cAAf","sourcesContent":["import React, { Component } from \"react\";\nimport BookCard from \"./BookCard\";\nimport { Grid, Container } from \"semantic-ui-react\";\n\nvar favoritesUrl = \"http://localhost:3001/favorites\";\n\nexport class BookCollection extends Component {\n  favoriteBook = book => {\n    const { user_id } = this.props;\n    var book_string = JSON.stringify(book);\n\n    fetch(favoritesUrl, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        user_id: user_id,\n        title: book.volumeInfo.title,\n        book_string: book_string,\n        authors: book.volumeInfo.authors[0],\n        image_url: book.volumeInfo.imageLinks.thumbnail\n      })\n    });\n  };\n\n  render() {\n    return (\n      <Container>\n        <Grid divided>\n          {this.props.books.map((book, index) => (\n            <div key={index}>\n              <BookCard onFavoriteBook={this.favoriteBook} book={book} />\n            </div>\n          ))}\n        </Grid>\n      </Container>\n    );\n  }\n}\n\nexport default BookCollection;\n\n"]},"metadata":{},"sourceType":"module"}